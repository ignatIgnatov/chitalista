version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: articles-db
    environment:
      POSTGRES_DB: articles_db
      POSTGRES_USER: articles_user
      POSTGRES_PASSWORD: articles_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - articles-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U articles_user -d articles_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build: .
    container_name: articles-backend
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/articles_db
      SPRING_DATASOURCE_USERNAME: articles_user
      SPRING_DATASOURCE_PASSWORD: articles_pass
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      FILE_UPLOAD_DIR: /app/uploads
      APP_JWT_SECRET: your-very-long-and-secure-jwt-secret-key-for-docker-2024
      APP_JWT_EXPIRATION: 86400000
      APP_BASE_URL: http://localhost:3000
    volumes:
      - backend_uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - articles-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/articles"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  backend_uploads:
    driver: local

networks:
  articles-network:
    driver: bridge